export const permissionManagerAbi = [
  {
    type: "constructor",
    inputs: [
      { name: "owner_", type: "address", internalType: "address" },
      { name: "cosigner_", type: "address", internalType: "address" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "approvePermission",
    inputs: [
      {
        name: "permission",
        type: "tuple",
        internalType: "struct PermissionManager.Permission",
        components: [
          { name: "account", type: "address", internalType: "address" },
          { name: "chainId", type: "uint256", internalType: "uint256" },
          { name: "expiry", type: "uint40", internalType: "uint40" },
          { name: "signer", type: "bytes", internalType: "bytes" },
          {
            name: "permissionContract",
            type: "address",
            internalType: "address",
          },
          { name: "permissionValues", type: "bytes", internalType: "bytes" },
          {
            name: "verifyingContract",
            type: "address",
            internalType: "address",
          },
          { name: "approval", type: "bytes", internalType: "bytes" },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "beforeCalls",
    inputs: [
      {
        name: "permission",
        type: "tuple",
        internalType: "struct PermissionManager.Permission",
        components: [
          { name: "account", type: "address", internalType: "address" },
          { name: "chainId", type: "uint256", internalType: "uint256" },
          { name: "expiry", type: "uint40", internalType: "uint40" },
          { name: "signer", type: "bytes", internalType: "bytes" },
          {
            name: "permissionContract",
            type: "address",
            internalType: "address",
          },
          { name: "permissionValues", type: "bytes", internalType: "bytes" },
          {
            name: "verifyingContract",
            type: "address",
            internalType: "address",
          },
          { name: "approval", type: "bytes", internalType: "bytes" },
        ],
      },
      { name: "paymaster", type: "address", internalType: "address" },
      { name: "userOpCosigner", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "cosigner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hashPermission",
    inputs: [
      {
        name: "permission",
        type: "tuple",
        internalType: "struct PermissionManager.Permission",
        components: [
          { name: "account", type: "address", internalType: "address" },
          { name: "chainId", type: "uint256", internalType: "uint256" },
          { name: "expiry", type: "uint40", internalType: "uint40" },
          { name: "signer", type: "bytes", internalType: "bytes" },
          {
            name: "permissionContract",
            type: "address",
            internalType: "address",
          },
          { name: "permissionValues", type: "bytes", internalType: "bytes" },
          {
            name: "verifyingContract",
            type: "address",
            internalType: "address",
          },
          { name: "approval", type: "bytes", internalType: "bytes" },
        ],
      },
    ],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isPaymasterEnabled",
    inputs: [{ name: "paymaster", type: "address", internalType: "address" }],
    outputs: [{ name: "enabled", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isPermissionApproved",
    inputs: [
      { name: "permissionHash", type: "bytes32", internalType: "bytes32" },
      { name: "account", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "approved", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isPermissionContractEnabled",
    inputs: [
      {
        name: "permissionContract",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [{ name: "enabled", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isPermissionRevoked",
    inputs: [
      { name: "permissionHash", type: "bytes32", internalType: "bytes32" },
      { name: "account", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "revoked", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isValidSignature",
    inputs: [
      { name: "userOpHash", type: "bytes32", internalType: "bytes32" },
      { name: "authData", type: "bytes", internalType: "bytes" },
    ],
    outputs: [{ name: "result", type: "bytes4", internalType: "bytes4" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pause",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "paused",
    inputs: [],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingCosigner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "revokePermission",
    inputs: [
      { name: "permissionHash", type: "bytes32", internalType: "bytes32" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "rotateCosigner",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setPaymasterEnabled",
    inputs: [
      { name: "paymaster", type: "address", internalType: "address" },
      { name: "enabled", type: "bool", internalType: "bool" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setPendingCosigner",
    inputs: [{ name: "newCosigner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setPermissionContractEnabled",
    inputs: [
      {
        name: "permissionContract",
        type: "address",
        internalType: "address",
      },
      { name: "enabled", type: "bool", internalType: "bool" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "unpause",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "CosignerRotated",
    inputs: [
      {
        name: "oldCosigner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newCosigner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Paused",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PaymasterGasSpendUpdated",
    inputs: [
      {
        name: "paymaster",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "addGasSpend",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PaymasterUpdated",
    inputs: [
      {
        name: "paymaster",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      { name: "enabled", type: "bool", indexed: false, internalType: "bool" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PendingCosignerSet",
    inputs: [
      {
        name: "newCosigner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PermissionApproved",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "permissionHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PermissionContractUpdated",
    inputs: [
      {
        name: "permissionContract",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      { name: "enabled", type: "bool", indexed: false, internalType: "bool" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PermissionRevoked",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "permissionHash",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Unpaused",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  { type: "error", name: "ApprovedPermission", inputs: [] },
  { type: "error", name: "DisabledPaymaster", inputs: [] },
  { type: "error", name: "DisabledPermissionContract", inputs: [] },
  { type: "error", name: "EnforcedPause", inputs: [] },
  { type: "error", name: "ExpectedPause", inputs: [] },
  { type: "error", name: "ExpiredPermission", inputs: [] },
  { type: "error", name: "InvalidBeforeCallsCall", inputs: [] },
  { type: "error", name: "InvalidPermissionApproval", inputs: [] },
  { type: "error", name: "InvalidSignature", inputs: [] },
  { type: "error", name: "InvalidUserOperationHash", inputs: [] },
  { type: "error", name: "InvalidUserOperationSender", inputs: [] },
  { type: "error", name: "MissingPendingCosigner", inputs: [] },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [{ name: "owner", type: "address", internalType: "address" }],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
  },
  { type: "error", name: "RevokedPermission", inputs: [] },
  { type: "error", name: "SelectorNotAllowed", inputs: [] },
  { type: "error", name: "TargetNotAllowed", inputs: [] },
];
